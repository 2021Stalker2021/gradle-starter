plugins {
    id 'java'
    id 'war'
}

apply from: 'script.gradle'

repositories {
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

configurations {
    Configuration configurationImpl = getByName("implementation")
    dmdev {
        description = "dmdev configuration"
    }
    configurationImpl.extendsFrom(dmdev)

    all {
        resolutionStrategy {
            force('org.springframework:spring-aop:6.0.11')
        }
    }
}

dependencies {
    compileOnly "jakarta.servlet:jakarta.servlet-api:6.0.0"

    implementation("org.springframework:spring-webmvc:6.0.11") {

    }
    implementation('org.springframework:spring-aop:6.0.11') {

    }
}

configurations.runtimeClasspath.files.each {println it}

jar {

    def jars = configurations.runtimeClasspath.files.collect { "lib/$it.name" }

    manifest {
        attributes 'Main-Class': 'com.dmdev.HelloWorld',
                   'Class-Path': jars.join(' ')
    }
}

task copyAllDependecies(type: Copy) {

    from(configurations.runtimeClasspath.files)
    into("$buildDir/libs/lib")
}


class CustomPlugin implements Plugin<Project> {

    @Override
    void apply(Project project) {
        def map = [description: "Hello task", group: "dmdev", type: DefaultTask]
        addHelloTask(project)
    }

    private Task addHelloTask(Project project) {
        def map = [description: "Hello task", group: "dmdev", type: DefaultTask]
        project.task(map, "hello") {

            println "configuration phase. Task hello"

            doLast {
                println "execution phase, Action 1"
            }
            doFirst {
                println "execution phase, Action 2"
            }
            doLast {
                println "execution phase, Action 3"
            }
            println "task: $description, group: $group, actions: ${actions.size()}"
            println "path task: $path"
        }
    }
}